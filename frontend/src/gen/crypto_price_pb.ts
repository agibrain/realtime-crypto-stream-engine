// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file crypto_price.proto (package crypto_price.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file crypto_price.proto.
 */
export const file_crypto_price: GenFile = /*@__PURE__*/
  fileDesc("ChJjcnlwdG9fcHJpY2UucHJvdG8SD2NyeXB0b19wcmljZS52MSIVChNTdHJlYW1QcmljZXNSZXF1ZXN0Ij8KC1ByaWNlVXBkYXRlEg4KBnRpY2tlchgBIAEoCRINCgVwcmljZRgCIAEoCRIRCgl0aW1lc3RhbXAYAyABKAMiIgoQQWRkVGlja2VyUmVxdWVzdBIOCgZ0aWNrZXIYASABKAkiNQoRQWRkVGlja2VyUmVzcG9uc2USDwoHc3VjY2VzcxgBIAEoCBIPCgdtZXNzYWdlGAIgASgJIiUKE1JlbW92ZVRpY2tlclJlcXVlc3QSDgoGdGlja2VyGAEgASgJIjgKFFJlbW92ZVRpY2tlclJlc3BvbnNlEg8KB3N1Y2Nlc3MYASABKAgSDwoHbWVzc2FnZRgCIAEoCSITChFHZXRUaWNrZXJzUmVxdWVzdCIlChJHZXRUaWNrZXJzUmVzcG9uc2USDwoHdGlja2VycxgBIAMoCTLyAgoSQ3J5cHRvUHJpY2VTZXJ2aWNlElQKDFN0cmVhbVByaWNlcxIkLmNyeXB0b19wcmljZS52MS5TdHJlYW1QcmljZXNSZXF1ZXN0GhwuY3J5cHRvX3ByaWNlLnYxLlByaWNlVXBkYXRlMAESUgoJQWRkVGlja2VyEiEuY3J5cHRvX3ByaWNlLnYxLkFkZFRpY2tlclJlcXVlc3QaIi5jcnlwdG9fcHJpY2UudjEuQWRkVGlja2VyUmVzcG9uc2USWwoMUmVtb3ZlVGlja2VyEiQuY3J5cHRvX3ByaWNlLnYxLlJlbW92ZVRpY2tlclJlcXVlc3QaJS5jcnlwdG9fcHJpY2UudjEuUmVtb3ZlVGlja2VyUmVzcG9uc2USVQoKR2V0VGlja2VycxIiLmNyeXB0b19wcmljZS52MS5HZXRUaWNrZXJzUmVxdWVzdBojLmNyeXB0b19wcmljZS52MS5HZXRUaWNrZXJzUmVzcG9uc2ViBnByb3RvMw");

/**
 * Request to start streaming prices
 *
 * @generated from message crypto_price.v1.StreamPricesRequest
 */
export type StreamPricesRequest = Message<"crypto_price.v1.StreamPricesRequest"> & {
};

/**
 * Describes the message crypto_price.v1.StreamPricesRequest.
 * Use `create(StreamPricesRequestSchema)` to create a new message.
 */
export const StreamPricesRequestSchema: GenMessage<StreamPricesRequest> = /*@__PURE__*/
  messageDesc(file_crypto_price, 0);

/**
 * Real-time price update
 *
 * @generated from message crypto_price.v1.PriceUpdate
 */
export type PriceUpdate = Message<"crypto_price.v1.PriceUpdate"> & {
  /**
   * @generated from field: string ticker = 1;
   */
  ticker: string;

  /**
   * @generated from field: string price = 2;
   */
  price: string;

  /**
   * @generated from field: int64 timestamp = 3;
   */
  timestamp: bigint;
};

/**
 * Describes the message crypto_price.v1.PriceUpdate.
 * Use `create(PriceUpdateSchema)` to create a new message.
 */
export const PriceUpdateSchema: GenMessage<PriceUpdate> = /*@__PURE__*/
  messageDesc(file_crypto_price, 1);

/**
 * Request to add a ticker
 *
 * @generated from message crypto_price.v1.AddTickerRequest
 */
export type AddTickerRequest = Message<"crypto_price.v1.AddTickerRequest"> & {
  /**
   * @generated from field: string ticker = 1;
   */
  ticker: string;
};

/**
 * Describes the message crypto_price.v1.AddTickerRequest.
 * Use `create(AddTickerRequestSchema)` to create a new message.
 */
export const AddTickerRequestSchema: GenMessage<AddTickerRequest> = /*@__PURE__*/
  messageDesc(file_crypto_price, 2);

/**
 * Response for adding a ticker
 *
 * @generated from message crypto_price.v1.AddTickerResponse
 */
export type AddTickerResponse = Message<"crypto_price.v1.AddTickerResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message crypto_price.v1.AddTickerResponse.
 * Use `create(AddTickerResponseSchema)` to create a new message.
 */
export const AddTickerResponseSchema: GenMessage<AddTickerResponse> = /*@__PURE__*/
  messageDesc(file_crypto_price, 3);

/**
 * Request to remove a ticker
 *
 * @generated from message crypto_price.v1.RemoveTickerRequest
 */
export type RemoveTickerRequest = Message<"crypto_price.v1.RemoveTickerRequest"> & {
  /**
   * @generated from field: string ticker = 1;
   */
  ticker: string;
};

/**
 * Describes the message crypto_price.v1.RemoveTickerRequest.
 * Use `create(RemoveTickerRequestSchema)` to create a new message.
 */
export const RemoveTickerRequestSchema: GenMessage<RemoveTickerRequest> = /*@__PURE__*/
  messageDesc(file_crypto_price, 4);

/**
 * Response for removing a ticker
 *
 * @generated from message crypto_price.v1.RemoveTickerResponse
 */
export type RemoveTickerResponse = Message<"crypto_price.v1.RemoveTickerResponse"> & {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message crypto_price.v1.RemoveTickerResponse.
 * Use `create(RemoveTickerResponseSchema)` to create a new message.
 */
export const RemoveTickerResponseSchema: GenMessage<RemoveTickerResponse> = /*@__PURE__*/
  messageDesc(file_crypto_price, 5);

/**
 * Request to get current tickers
 *
 * @generated from message crypto_price.v1.GetTickersRequest
 */
export type GetTickersRequest = Message<"crypto_price.v1.GetTickersRequest"> & {
};

/**
 * Describes the message crypto_price.v1.GetTickersRequest.
 * Use `create(GetTickersRequestSchema)` to create a new message.
 */
export const GetTickersRequestSchema: GenMessage<GetTickersRequest> = /*@__PURE__*/
  messageDesc(file_crypto_price, 6);

/**
 * Response with current tickers
 *
 * @generated from message crypto_price.v1.GetTickersResponse
 */
export type GetTickersResponse = Message<"crypto_price.v1.GetTickersResponse"> & {
  /**
   * @generated from field: repeated string tickers = 1;
   */
  tickers: string[];
};

/**
 * Describes the message crypto_price.v1.GetTickersResponse.
 * Use `create(GetTickersResponseSchema)` to create a new message.
 */
export const GetTickersResponseSchema: GenMessage<GetTickersResponse> = /*@__PURE__*/
  messageDesc(file_crypto_price, 7);

/**
 * Service for streaming cryptocurrency prices
 *
 * @generated from service crypto_price.v1.CryptoPriceService
 */
export const CryptoPriceService: GenService<{
  /**
   * Stream real-time prices for subscribed tickers
   *
   * @generated from rpc crypto_price.v1.CryptoPriceService.StreamPrices
   */
  streamPrices: {
    methodKind: "server_streaming";
    input: typeof StreamPricesRequestSchema;
    output: typeof PriceUpdateSchema;
  },
  /**
   * Add a ticker to the subscription list
   *
   * @generated from rpc crypto_price.v1.CryptoPriceService.AddTicker
   */
  addTicker: {
    methodKind: "unary";
    input: typeof AddTickerRequestSchema;
    output: typeof AddTickerResponseSchema;
  },
  /**
   * Remove a ticker from the subscription list
   *
   * @generated from rpc crypto_price.v1.CryptoPriceService.RemoveTicker
   */
  removeTicker: {
    methodKind: "unary";
    input: typeof RemoveTickerRequestSchema;
    output: typeof RemoveTickerResponseSchema;
  },
  /**
   * Get list of currently subscribed tickers
   *
   * @generated from rpc crypto_price.v1.CryptoPriceService.GetTickers
   */
  getTickers: {
    methodKind: "unary";
    input: typeof GetTickersRequestSchema;
    output: typeof GetTickersResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_crypto_price, 0);

